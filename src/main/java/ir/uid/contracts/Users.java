package ir.uid.contracts;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple5;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.3.0.
 */
public class Users extends Contract {
    private static final String BINARY = "";

    public static final String FUNC_GETUSER = "getUser";

    public static final String FUNC_ADDUSER = "addUser";

    public static final String FUNC_GETTEMPLATESSIZE = "getTemplatesSize";

    public static final String FUNC_EDITUSER = "editUser";

    public static final String FUNC_USERTEMPLATES = "userTemplates";

    @Deprecated
    protected Users(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Users(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Users(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Users(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<Tuple5<String, String, String, String, String>> getUser(String key) {
        final Function function = new Function(FUNC_GETUSER,
                                               Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(key)),
                                               Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple5<String, String, String, String, String>>(
                new Callable<Tuple5<String, String, String, String, String>>() {
                    @Override
                    public Tuple5<String, String, String, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<String, String, String, String, String>(
                                (String) results.get(0).getValue(),
                                (String) results.get(1).getValue(),
                                (String) results.get(2).getValue(),
                                (String) results.get(3).getValue(),
                                (String) results.get(4).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> addUser(String name, String family, String email, String dob, String sex, String template) {
        final Function function = new Function(
                FUNC_ADDUSER,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(name),
                                    new org.web3j.abi.datatypes.Utf8String(family),
                                    new org.web3j.abi.datatypes.Utf8String(email),
                                    new org.web3j.abi.datatypes.Utf8String(dob),
                                    new org.web3j.abi.datatypes.Utf8String(sex),
                                    new org.web3j.abi.datatypes.Utf8String(template)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getTemplatesSize() {
        final Function function = new Function(FUNC_GETTEMPLATESSIZE,
                                               Arrays.<Type>asList(),
                                               Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> editUser(String name, String family, String email, String dob, String sex, String template) {
        final Function function = new Function(
                FUNC_EDITUSER,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(name),
                                    new org.web3j.abi.datatypes.Utf8String(family),
                                    new org.web3j.abi.datatypes.Utf8String(email),
                                    new org.web3j.abi.datatypes.Utf8String(dob),
                                    new org.web3j.abi.datatypes.Utf8String(sex),
                                    new org.web3j.abi.datatypes.Utf8String(template)),
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> userTemplates(BigInteger param0) {
        final Function function = new Function(FUNC_USERTEMPLATES,
                                               Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)),
                                               Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    @Deprecated
    public static Users load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Users(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Users load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Users(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Users load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Users(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Users load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Users(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Users> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Users.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<Users> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Users.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Users> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Users.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Users> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Users.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}